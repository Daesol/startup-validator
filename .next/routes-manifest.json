{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/validate/report/[id]",
      "regex": "^/validate/report/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/validate/report/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/validate/vc-report/[id]",
      "regex": "^/validate/vc\\-report/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/validate/vc\\-report/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/validations/[id]",
      "regex": "^/validations/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/validations/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/test",
      "regex": "^/test(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test(?:/)?$"
    },
    {
      "page": "/validate",
      "regex": "^/validate(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate(?:/)?$"
    },
    {
      "page": "/validate/advance",
      "regex": "^/validate/advance(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/advance(?:/)?$"
    },
    {
      "page": "/validate/general",
      "regex": "^/validate/general(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/general(?:/)?$"
    },
    {
      "page": "/validate/initial",
      "regex": "^/validate/initial(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/initial(?:/)?$"
    },
    {
      "page": "/validate/initial-score",
      "regex": "^/validate/initial\\-score(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/initial\\-score(?:/)?$"
    },
    {
      "page": "/validate/report",
      "regex": "^/validate/report(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/report(?:/)?$"
    },
    {
      "page": "/validate/vc-validation",
      "regex": "^/validate/vc\\-validation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validate/vc\\-validation(?:/)?$"
    },
    {
      "page": "/validations",
      "regex": "^/validations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/validations(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}